package aoc

import org.junit.Test
import kotlin.test.assertEquals

class Day10Test {
    @Test
    fun sampleOne() {
        val map = """
            ......#.#.
            #..#.#....
            ..#######.
            .#.#.###..
            .#..#.....
            ..#....#.#
            #..#....#.
            .##.#..###
            ##...#..#.
            .#....####
        """.trimIndent()
        // 5,8: 33
        assertEquals(33, maxNumVisibleAsteroids(map))
    }

    @Test
    fun sampleTwo() {
        val map = """
            #.#...#.#.
            .###....#.
            .#....#...
            ##.#.#.#.#
            ....#.#.#.
            .##..###.#
            ..#...##..
            ..##....##
            ......#...
            .####.###.
        """.trimIndent()
        // 1,2: 35
        assertEquals(35, maxNumVisibleAsteroids(map))
    }

    @Test
    fun sampleThree() {
        val map = """
            .#..#..###
            ####.###.#
            ....###.#.
            ..###.##.#
            ##.##.#.#.
            ....###..#
            ..#.#..#.#
            #..#.#.###
            .##...##.#
            .....#.#..
        """.trimIndent()
        // 6,3: 41
        assertEquals(41, maxNumVisibleAsteroids(map))
    }

    @Test
    fun sampleFour() {
        val map = """
            .#..##.###...#######
            ##.############..##.
            .#.######.########.#
            .###.#######.####.#.
            #####.##.#.##.###.##
            ..#####..#.#########
            ####################
            #.####....###.#.#.##
            ##.#################
            #####.##.###..####..
            ..######..##.#######
            ####.##.####...##..#
            .#####..#.######.###
            ##...#.##########...
            #.##########.#######
            .####.#.###.###.#.##
            ....##.##.###..#####
            .#.#.###########.###
            #.#.#.#####.####.###
            ###.##.####.##.#..##
        """.trimIndent()
        // 11,13: 210
        assertEquals(210, maxNumVisibleAsteroids(map))
    }

    @Test
    fun partOne() {
        println(maxNumVisibleAsteroids(INPUT_MAP))
    }

    @Test
    fun sampleVaporized() {
        val map = """
            .#..##.###...#######
            ##.############..##.
            .#.######.########.#
            .###.#######.####.#.
            #####.##.#.##.###.##
            ..#####..#.#########
            ####################
            #.####....###.#.#.##
            ##.#################
            #####.##.###..####..
            ..######..##.#######
            ####.##.####...##..#
            .#####..#.######.###
            ##...#.##########...
            #.##########.#######
            .####.#.###.###.#.##
            ....##.##.###..#####
            .#.#.###########.###
            #.#.#.#####.####.###
            ###.##.####.##.#..##
        """.trimIndent()
        assertEquals(802, twoHundredthVaporized(map))
    }

    @Test
    fun partTwo() {
        println(twoHundredthVaporized(INPUT_MAP))
    }
}

val INPUT_MAP = """
    .###.#...#.#.##.#.####..
    .#....#####...#.######..
    #.#.###.###.#.....#.####
    ##.###..##..####.#.####.
    ###########.#######.##.#
    ##########.#########.##.
    .#.##.########.##...###.
    ###.#.##.#####.#.###.###
    ##.#####.##..###.#.##.#.
    .#.#.#####.####.#..#####
    .###.#####.#..#..##.#.##
    ########.##.#...########
    .####..##..#.###.###.#.#
    ....######.##.#.######.#
    ###.####.######.#....###
    ############.#.#.##.####
    ##...##..####.####.#..##
    .###.#########.###..#.##
    #.##.#.#...##...#####..#
    ##.#..###############.##
    ##.###.#####.##.######..
    ##.#####.#.#.##..#######
    ...#######.######...####
    #....#.#.#.####.#.#.#.##
""".trimIndent()